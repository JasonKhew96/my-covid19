{"version":3,"file":"component---src-pages-tests-tsx-aee6ed0ef65193f31191.js","mappings":"6OAuBMA,EAAAA,SAAAA,G,wIACJC,MAAmB,CACjBC,SAAU,EACVC,KAAM,GACNC,SAAU,I,0CAGZC,kBAAA,WAAoB,WAClBC,IAAAA,MACE,2FACA,CACEC,UAAU,EACVC,QAAQ,EACRC,SAAU,SAACC,GAMT,IALA,IAAIC,EAAsBD,EAAQP,KAAKS,MACrCF,EAAQP,KAAKU,OAAS,GACtBH,EAAQP,KAAKU,OAAS,GAEpBX,EAAW,EACNY,EAAI,EAAGA,EAAIH,EAAQE,OAAQC,IAClCZ,EAAWa,KAAKC,IAAIC,SAASN,EAAQG,GAAG,WAAYZ,GACpDA,EAAWa,KAAKC,IAAIC,SAASN,EAAQG,GAAR,KAAoBZ,GAEnD,EAAKgB,SAAS,CACZd,SAAUM,EAAQP,KAClBA,KAAMQ,EACNT,SAAUA,Q,EAOpBiB,qBAAA,a,EAEAC,OAAA,WACE,OACE,uBAAKC,MAAO,CAAEC,QAAS,KACrB,gBAAC,IAAD,CAAqBC,MAAM,MAAMC,OAAQ,KACvC,gBAAC,IAAD,CAAWrB,KAAMsB,KAAKxB,MAAME,MAC1B,gBAAC,IAAD,CAAMuB,KAAK,WAAWC,QAAQ,SAASC,OAAO,QAC9C,gBAAC,IAAD,CAAMF,KAAK,WAAWC,QAAQ,MAAMC,OAAO,SAC3C,gBAAC,IAAD,CAAeA,OAAO,OAAOC,gBAAgB,QAC7C,gBAAC,IAAD,CAAOF,QAAQ,SACf,gBAAC,IAAD,CACED,KAAK,SACLC,QAAQ,SACRG,OAAQ,CAAC,EAAGL,KAAKxB,MAAMC,YAEzB,gBAAC,IAAD,CACEwB,KAAK,SACLC,QAAQ,MACRG,OAAQ,CAAC,EAAGL,KAAKxB,MAAMC,YAEzB,gBAAC,IAAD,MACA,gBAAC,IAAD,U,EAvDNF,CAAuB+B,EAAAA,WAuE7B,UARkB,WAChB,OACE,4BACE,gBAAC/B,EAAD","sources":["webpack://my-covid19/./src/pages/tests.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Papa from \"papaparse\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Dropdown } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\ninterface StateData {\n  maxValue: number;\n  data: Array<any>;\n  fullData: Array<any>;\n}\n\nconst keys: Array<string> = [\"rtk-ag\", \"pcr\"];\n\nclass TestsComponent extends React.Component {\n  state: StateData = {\n    maxValue: 0,\n    data: [],\n    fullData: [],\n  };\n\n  componentDidMount() {\n    Papa.parse(\n      \"https://cdn.jsdelivr.net/gh/MoH-Malaysia/covid19-public@main/epidemic/tests_malaysia.csv\",\n      {\n        download: true,\n        header: true,\n        complete: (results) => {\n          let newData: Array<any> = results.data.slice(\n            results.data.length - 29,\n            results.data.length - 1\n          );\n          let maxValue = 0;\n          for (let i = 0; i < newData.length; i++) {\n            maxValue = Math.max(parseInt(newData[i][\"rtk-ag\"]), maxValue);\n            maxValue = Math.max(parseInt(newData[i][\"pcr\"]), maxValue);\n          }\n          this.setState({\n            fullData: results.data,\n            data: newData,\n            maxValue: maxValue,\n          });\n        },\n      }\n    );\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    return (\n      <div style={{ padding: 32 }}>\n        <ResponsiveContainer width=\"95%\" height={512}>\n          <LineChart data={this.state.data}>\n            <Line type=\"monotone\" dataKey=\"rtk-ag\" stroke=\"red\" />\n            <Line type=\"monotone\" dataKey=\"pcr\" stroke=\"blue\" />\n            <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n            <XAxis dataKey=\"date\" />\n            <YAxis\n              type=\"number\"\n              dataKey=\"rtk-ag\"\n              domain={[0, this.state.maxValue]}\n            />\n            <YAxis\n              type=\"number\"\n              dataKey=\"pcr\"\n              domain={[0, this.state.maxValue]}\n            />\n            <Tooltip />\n            <Legend />\n          </LineChart>\n        </ResponsiveContainer>\n      </div>\n    );\n  }\n}\n\nconst TestsPage = () => {\n  return (\n    <main>\n      <TestsComponent />\n    </main>\n  );\n};\n\nexport default TestsPage;\n"],"names":["TestsComponent","state","maxValue","data","fullData","componentDidMount","Papa","download","header","complete","results","newData","slice","length","i","Math","max","parseInt","setState","componentWillUnmount","render","style","padding","width","height","this","type","dataKey","stroke","strokeDasharray","domain","React"],"sourceRoot":""}